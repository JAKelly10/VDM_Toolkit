module MinimalMapNRResEmpty
exports all
definitions 

functions
	g: nat1 -> set of real
	g(n) == if n mod 2 = 0 then {n} else {};
	
	f: () -> map nat1 to set1 of real
	f() == { n |-> g(n) | n in set {1,...,10} & g(n) <> {} };

	--f': () -> map nat1 to set1 of real
	--f'() == 
	--	let m: map nat1 to set of real = { n |-> g(n) | n in set {1,...,10} } in
	--		(m :-> {{}});

	--f'': () -> map nat1 to set1 of real
	--f''() == ({ n |-> g(n) | n in set {1,...,10} } :-> {{}});

end MinimalMapNRResEmpty