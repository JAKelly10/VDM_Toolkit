module TestV2IOperator 
exports all
definitions 

state S of  
   x : nat 
   y : real
inv mk_S(x,y) == x > 15 and y < 5
init s == s = mk_S(25,0)
end

operations

test: nat1 ==> ()
test(inc) == 
   (x := x + inc)
 pre inc < 10 and x > 0
 post x~ < x;

 FMA_Explicit: real*real ==> ()
 FMA_Explicit(M,A) == 
   (y := y*M+A);

-- FMA_Implicit(M,A:real) ==
--    (y := y*M+A)
-- pre M > 0 and A > 0
-- post (y - A)/M = y~;

end TestV2IOperator