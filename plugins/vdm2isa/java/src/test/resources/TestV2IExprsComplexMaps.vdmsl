module TestV2IExprsComplexMaps
exports all
definitions

types
	R :: 
		x: nat 
		y: nat	
	inv r == r.x < r.y;
	
values	
	-- "existential" map comp with unused binding; unused warning is useful 
	v4 = { x+x |-> 10 | x in set {1,2,3}, y in set {4,5,6} };

	-- "existential" map comp with (record) pattern context 
	v5 = { mk_R(x,y) |-> 10 | x in set {1,2,3}, y in set {4,5,6} & x < y };

	-- "existential" map comp with (structured) pattern context 
	v6 = { mk_(x,y) |-> mk_R(x,y) | x in set {1,2,3}, y in set {4,5,6} };
		
end TestV2IExprsComplexMaps