
#############################################################################
package com.fujitsu.vdmj.tc.definitions to vdm2isa.tr.definitions;
#############################################################################

map TCDefinition{} to TRDefinition();
map TCDefinitionList{} to TRDefinitionList(this);
map TCTypeDefinition{annotations, name, type, invExpression} to TRTypeDefinition(annotations, name, type, invExpression);
map TCValueDefinition{comments, pattern, type, exp} to TRValueDefinition(comments, pattern, type, exp);
map TCExplicitFunctionDefinition{comments, name, type, paramPatternList, body} to TRExplicitFunctionDefinition(comments, name, type, paramPatternList, body);
map TCExplicitFunctionDefinition{comments, annotations, name, typeParams, type, paramPatternList, body, precondition, postcondition, isTypeInvariant, measureExp} to TRExplicitFunctionDefinition(comments, annotations, name, typeParams, type, paramPatternList, body, precondition, postcondition, isTypeInvariant, measureExp);

#############################################################################
package com.fujitsu.vdmj.tc.expressions to vdm2isa.tr.expressions;
#############################################################################

map TCExpression{} to TRExpression();
map TCExpressionList{} to TRExpressionList(this);

map TCBooleanLiteralExpression{} to TRLiteralExpression(this); 
map TCCharLiteralExpression{} to TRLiteralExpression(this);
map TCIntegerLiteralExpression{} to TRLiteralExpression(this);
map TCRealLiteralExpression{} to TRLiteralExpression(this);
map TCStringLiteralExpression{} to TRLiteralExpression(this);
map TCQuoteLiteralExpression{} to TRLiteralExpression(this);

map TCNotExpression{exp} to TRUnaryExpression(this, exp);
map TCAbsoluteExpression{exp} to TRUnaryExpression(this, exp);
map TCFloorExpression{exp} to TRUnaryExpression(this, exp);
map TCUnaryMinusExpression{exp} to TRUnaryExpression(this, exp);
map TCUnaryPlusExpression{exp} to TRUnaryExpression(this, exp);

map TCCardinalityExpression{exp} to TRUnaryExpression(this, exp);
map TCPowerSetExpression{exp} to TRUnaryExpression(this, exp);
map TCDistUnionExpression{exp} to TRUnaryExpression(this, exp);
map TCDistIntersectExpression{exp} to TRUnaryExpression(this, exp);

map TCLenExpression{exp} to TRUnaryExpression(this, exp);
map TCHeadExpression{exp} to TRUnaryExpression(this, exp);
map TCTailExpression{exp} to TRUnaryExpression(this, exp);
map TCIndicesExpression{exp} to TRUnaryExpression(this, exp);
map TCElementsExpression{exp} to TRUnaryExpression(this, exp);
map TCDistConcatExpression{exp} to TRUnaryExpression(this, exp);
map TCReverseExpression{exp} to TRUnaryExpression(this, exp);

map TCDistMergeExpression{exp} to TRUnaryExpression(this, exp);
map TCMapDomainExpression{exp} to TRUnaryExpression(this, exp);
map TCMapRangeExpression{exp} to TRUnaryExpression(this, exp);
map TCMapInverseExpression{exp} to TRUnaryExpression(this, exp);

map TCAndExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCOrExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCEquivalentExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCImpliesExpression{left, op, right} to TRBinaryExpression(left, op, right);

map TCEqualsExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCNotEqualExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCLessEqualExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCLessExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCGreaterEqualExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCGreaterExpression{left, op, right} to TRBinaryExpression(left, op, right);

map TCPlusExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCSubtractExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCTimesExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCDivExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCDivideExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCModExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCRemExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCStarStarExpression{left, op, right} to TRBinaryExpression(left, op, right);

map TCInSetExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCNotInSetExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCSetUnionExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCSetIntersectExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCSetDifferenceExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCSubsetExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCProperSubsetExpression{left, op, right} to TRBinaryExpression(left, op, right);

map TCSeqConcatExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCSubseqExpression{seq, from, to} to TRSubseqExpression(seq, from, to);

map TCPlusPlusExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCDomainResByExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCDomainResToExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCRangeResByExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCRangeResToExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCMapUnionExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCCompExpression{left, op, right} to TRBinaryExpression(left, op, right);

map TCSetRangeExpression{location, first, last} to TRSetRangeExpression(location, first, last);
map TCSetEnumExpression{location, members} to TRSetEnumExpression(location, members);
map TCSeqEnumExpression{location, members} to TRSeqEnumExpression(location, members);
map TCMapletExpressionList{} to TRMapletExpressionList(this);
map TCMapEnumExpression{location, members} to TRMapEnumExpression(location, members);
map TCMapletExpression{left, right} to TRMapletExpression(left, right);
map TCTupleExpression{location, args} to TRTupleExpression(location, args); 

map TCRecordModifier{tag, value} to TRRecordModifier(tag, value);
map TCRecordModifierList{} to TRRecordModifierList(this);
map TCMuExpression{location, record, modifiers} to TRMuExpression(location, record, modifiers);
map TCMkTypeExpression{typename, args} to TRMkTypeExpression(typename, args);
map TCFieldNumberExpression{tuple, field, type} to TRFieldNumberExpression(tuple, field, type);
map TCFieldExpression{object, field} to TRFieldExpression(object, field);

map TCNotYetSpecifiedExpression{location} to TRNotYetSpecifiedExpression(location);
map TCNarrowExpression{location, typename, basictype, test} to TRNarrowExpression(location, typename, basictype, test);
map TCIsExpression{location, typename, basictype, test} to TRIsExpression(location, typename, basictype, test);

map TCIotaExpression{location, bind, predicate} to TRIotaExpression(location, bind, predicate);
map TCLambdaExpression{location, bindList, expression} to TRLambdaExpression(location, bindList, expression); 
map TCExists1Expression{bind, predicate} to TRBoundedExpression(this, bind, predicate);
map TCExistsExpression{bindList, predicate} to TRBoundedExpression(this, bindList, predicate);
map TCForAllExpression{bindList, predicate} to TRBoundedExpression(this, bindList, predicate);
#map TCLetBeStExpression{location, bind, suchThat, value} to
map TCLetDefExpression{location, localDefs, expression} to TRLetDefExpression(location, localDefs, expression);

map TCSetCompExpression{first, bindings, predicate} to TRCompExpression(this, first, bindings, predicate);
map TCSeqCompExpression{first, bind, predicate} to TRCompExpression(this, first, bind, predicate);

map TCNilExpression{location} to TRNilExpression(location);
map TCApplyExpression{type, root, args} to TRApplyExpression(type, root, args);
map TCIfExpression{location, ifExp, thenExp, elseExp} to TRIfExpression(location, ifExp, thenExp, elseExp);
map TCVariableExpression{name} to TRVariableExpression(name);


#############################################################################
package com.fujitsu.vdmj.tc.lex to vdm2isa.tr.lex;
#package com.fujitsu.vdmj.ast.lex to vdn2isa.tr.lex;
#############################################################################

unmapped com.fujitsu.vdmj.tc.lex.TCNameToken;
unmapped com.fujitsu.vdmj.tc.lex.TCNameList;
unmapped com.fujitsu.vdmj.tc.lex.TCIdentifierToken;
unmapped com.fujitsu.vdmj.ast.lex.LexIntegerToken;
unmapped com.fujitsu.vdmj.ast.lex.LexRealToken;
unmapped com.fujitsu.vdmj.ast.lex.LexKeywordToken;
unmapped com.fujitsu.vdmj.ast.lex.LexCommentList;
unmapped com.fujitsu.vdmj.lex.LexLocation;
unmapped com.fujitsu.vdmj.tc.annotations.TCAnnotationList;

#############################################################################
package com.fujitsu.vdmj.tc.modules to vdm2isa.tr.modules;
#############################################################################

map TCModuleList{} to TRModuleList(this);
map TCModule{name, defs, files} to TRModule(name, defs, files);

#############################################################################
package com.fujitsu.vdmj.tc.patterns to vdm2isa.tr.patterns;
#############################################################################

map TCPattern{} to TRPattern();
map TCPatternList{} to TRPatternList(this);
map TCPatternListList{} to TRParameterList(this); 
map TCBind{} to TRMultipleBind();
map TCMultipleBind{} to TRMultipleBind();
map TCMultipleBindList{} to TRMultipleBindList(this);
map TCTypeBindList{} to TRTypeBindList(this);

map TCSetBind{pattern, set} to TRMultipleSetBind(pattern, set);
map TCMultipleSetBind{plist, set} to TRMultipleSetBind(plist, set);
map TCSeqBind{pattern, sequence} to TRMultipleSeqBind(pattern, sequence);
map TCMultipleSeqBind{plist, sequence} to TRMultipleSeqBind(plist, sequence);
map TCTypeBind{pattern, type} to TRMultipleTypeBind(pattern, type);
map TCMultipleTypeBind{plist, type} to TRMultipleTypeBind(plist, type); 

map TCIdentifierPattern{} to TRBasicPattern(this);
map TCBooleanPattern{} to TRBasicPattern(this);
map TCCharacterPattern{} to TRBasicPattern(this);
map TCIntegerPattern{} to TRBasicPattern(this);
map TCQuotePattern{} to TRBasicPattern(this);
map TCRealPattern{} to TRBasicPattern(this);
map TCStringPattern{} to TRBasicPattern(this);
map TCNilPattern{} to TRBasicPattern(this);
map TCIgnorePattern{} to TRBasicPattern(this);

map TCSetPattern{plist} to TRStructuredPattern(this, plist);
map TCSeqPattern{plist} to TRStructuredPattern(this, plist);
map TCTuplePattern{plist} to TRStructuredPattern(this, plist);
map TCConcatenationPattern{left, right} to TRStructuredPattern(this, left, right);
map TCUnionPattern{left, right} to TRStructuredPattern(this, left, right);
map TCMapUnionPattern{left, right} to TRStructuredPattern(this, left, right);

#@NB is this pattern list mapping okay?
map TCMapletPattern{from, to} to TRStructuredPattern(this, from, to);
#map TCMapletPatternList{} to TRPatternList(this);
#map TCMapPattern{maplets} to TRStructuredPattern(this, maplets);

#############################################################################
package com.fujitsu.vdmj.tc.types to vdm2isa.tr.types;
#############################################################################

map TCType{} to TRType();
map TCTypeList{} to TRTypeList(this);

map TCFunctionType{location, parameters, partial, result} to TRFunctionType(location, parameters, partial, result);

map TCNaturalOneType{} to TRBasicType(this);
map TCNaturalType{} to TRBasicType(this);
map TCIntegerType{} to TRBasicType(this);
map TCRationalType{} to TRBasicType(this);
map TCRealType{} to TRBasicType(this);
map TCBooleanType{} to TRBasicType(this);
map TCCharacterType{} to TRBasicType(this);
map TCTokenType{} to TRBasicType(this);

map TCQuoteType{location, value} to TRQuoteType(location, value);
map TCProductType{location, types} to TRProductType(location, types);
map TCMapType{location, from, to} to TRMapType(this, location, from, to);
map TCInMapType{location, from, to} to TRMapType(this, location, from, to);
map TCInvariantType{} to TRInvariantType();
map TCNamedType{typename, type} to TRNamedType(typename, type);
map TCRecordType{name, fields, composed} to TRRecordType(name, fields, composed);
map TCField{tagname, type, equalityAbstraction} to TRField(tagname, type, equalityAbstraction);
map TCFieldList{} to TRFieldList(this);
map TCSetType{setof} to TRSetType(this, setof);
map TCSet1Type{setof} to TRSetType(this, setof);
map TCSeqType{seqof} to TRSeqType(this, seqof);
map TCSeq1Type{seqof} to TRSeqType(this, seqof);
map TCOptionalType{location, type} to TROptionalType(location, type);
map TCUnknownType{location} to TRUnknownType(location);

#############################################################################
# Classes that are not mapped
#############################################################################

unmapped java.lang.Boolean;
unmapped java.lang.String;
unmapped java.lang.Long;
unmapped com.fujitsu.vdmj.mapper.FileList;
