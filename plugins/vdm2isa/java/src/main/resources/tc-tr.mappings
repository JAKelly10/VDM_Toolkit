
#############################################################################
package com.fujitsu.vdmj.tc.definitions to vdm2isa.tr.definitions;
#############################################################################

map TCDefinition{} to TRDefinition();
map TCDefinitionList{} to TRDefinitionList(this);
map TCValueDefinition{comments, pattern, type, exp} to TRValueDefinition(comments, pattern, type, exp);
map TCExplicitFunctionDefinition{comments, name, type, paramPatternList, body} to TRExplicitFunctionDefinition(comments, name, type, paramPatternList, body);
map TCExplicitFunctionDefinition{comments, annotations, name, typeParams, type, paramPatternList, body, precondition, postcondition, isTypeInvariant, measureExp} to TRExplicitFunctionDefinition(comments, annotations, name, typeParams, type, paramPatternList, body, precondition, postcondition, isTypeInvariant, measureExp);

#############################################################################
package com.fujitsu.vdmj.tc.expressions to vdm2isa.tr.expressions;
#############################################################################

map TCExpression{} to TRExpression();
map TCExpressionList{} to TRExpressionList(this);

map TCBooleanLiteralExpression{} to TRLiteralExpression(this); 
map TCCharLiteralExpression{} to TRLiteralExpression(this);
map TCIntegerLiteralExpression{} to TRLiteralExpression(this);
map TCRealLiteralExpression{} to TRLiteralExpression(this);

map TCNotExpression{exp} to TRUnaryExpression(this, exp);
map TCAbsoluteExpression{exp} to TRUnaryExpression(this, exp);
map TCFloorExpression{exp} to TRUnaryExpression(this, exp);
map TCUnaryMinusExpression{exp} to TRUnaryExpression(this, exp);
map TCUnaryPlusExpression{exp} to TRUnaryExpression(this, exp);
map TCCardinalityExpression{exp} to TRUnaryExpression(this, exp);
map TCDistUnionExpression{exp} to TRUnaryExpression(this, exp);
map TCDistIntersectExpression{exp} to TRUnaryExpression(this, exp);
map TCLenExpression{exp} to TRUnaryExpression(this, exp);
map TCHeadExpression{exp} to TRUnaryExpression(this, exp);
map TCTailExpression{exp} to TRUnaryExpression(this, exp);
map TCIndicesExpression{exp} to TRUnaryExpression(this, exp);
map TCElementsExpression{exp} to TRUnaryExpression(this, exp);
map TCDistConcatExpression{exp} to TRUnaryExpression(this, exp);
map TCDistMergeExpression{exp} to TRUnaryExpression(this, exp);
map TCReverseExpression{exp} to TRUnaryExpression(this, exp);
map TCMapDomainExpression{exp} to TRUnaryExpression(this, exp);
map TCMapRangeExpression{exp} to TRUnaryExpression(this, exp);
map TCMapInverseExpression{exp} to TRUnaryExpression(this, exp);

map TCAndExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCOrExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCEquivalentExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCImpliesExpression{left, op, right} to TRBinaryExpression(left, op, right);

map TCEqualsExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCNotEqualExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCLessEqualExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCLessExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCGreaterEqualExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCGreaterExpression{left, op, right} to TRBinaryExpression(left, op, right);

map TCPlusExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCSubtractExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCTimesExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCDivExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCDivideExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCModExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCRemExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCStarStarExpression{left, op, right} to TRBinaryExpression(left, op, right);

map TCInSetExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCNotInSetExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCSetUnionExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCSetIntersectExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCSetDifferenceExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCSubsetExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCProperSubsetExpression{left, op, right} to TRBinaryExpression(left, op, right);

map TCSeqConcatExpression{left, op, right} to TRBinaryExpression(left, op, right);

map TCPlusPlusExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCDomainResByExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCDomainResToExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCRangeResByExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCRangeResToExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCMapUnionExpression{left, op, right} to TRBinaryExpression(left, op, right);
map TCCompExpression{left, op, right} to TRBinaryExpression(left, op, right);

map TCApplyExpression{root, args} to TRApplyExpression(root, args);
map TCSetEnumExpression{location, members} to TRSetEnumExpression(location, members);
map TCSeqEnumExpression{location, members} to TRSeqEnumExpression(location, members);
map TCIfExpression{location, ifExp, thenExp, elseExp} to TRIfExpression(location, ifExp, thenExp, elseExp);
map TCVariableExpression{name} to TRVariableExpression(name);


#############################################################################
package com.fujitsu.vdmj.tc.lex to vdm2isa.tr.lex;
#package com.fujitsu.vdmj.ast.lex to vdn2isa.tr.lex;
#############################################################################

unmapped com.fujitsu.vdmj.tc.lex.TCNameToken;
unmapped com.fujitsu.vdmj.tc.lex.TCNameList;
unmapped com.fujitsu.vdmj.tc.lex.TCIdentifierToken;
unmapped com.fujitsu.vdmj.ast.lex.LexIntegerToken;
unmapped com.fujitsu.vdmj.ast.lex.LexRealToken;
unmapped com.fujitsu.vdmj.ast.lex.LexKeywordToken;
unmapped com.fujitsu.vdmj.ast.lex.LexCommentList;
unmapped com.fujitsu.vdmj.lex.LexLocation;
unmapped com.fujitsu.vdmj.tc.annotations.TCAnnotationList;

#############################################################################
package com.fujitsu.vdmj.tc.modules to vdm2isa.tr.modules;
#############################################################################

map TCModuleList{} to TRModuleList(this);
map TCModule{name, defs, files} to TRModule(name, defs, files);

#############################################################################
package com.fujitsu.vdmj.tc.patterns to vdm2isa.tr.patterns;
#############################################################################

map TCPatternListList{} to TRParameterList(this); 
unmapped com.fujitsu.vdmj.tc.patterns.TCIdentifierPattern;

#############################################################################
package com.fujitsu.vdmj.tc.types to vdm2isa.tr.types;
#############################################################################

map TCType{} to TRType();
map TCTypeList{} to TRTypeList(this);

map TCFunctionType{location, parameters, partial, result} to TRFunctionType(location, parameters, partial, result);

map TCNaturalOneType{} to TRBasicType(this);
map TCNaturalType{} to TRBasicType(this);
map TCIntegerType{} to TRBasicType(this);
map TCRationalType{} to TRBasicType(this);
map TCRealType{} to TRBasicType(this);
map TCBooleanType{} to TRBasicType(this);
map TCCharacterType{} to TRBasicType(this);
map TCTokenType{} to TRBasicType(this);

map TCQuoteType{location, value} to TRQuoteType(location, value);

map TCMapType{location, from, to} to TRMapType(location, from, to);
map TCNamedType{typename, type} to TRNamedType(typename, type); 
map TCSetType{setof} to TRSetType(this, setof);
map TCSet1Type{setof} to TRSetType(this, setof);
map TCSeqType{seqof} to TRSeqType(this, seqof);
map TCSeq1Type{seqof} to TRSeqType(this, seqof);

#############################################################################
# Classes that are not mapped
#############################################################################

unmapped java.lang.Boolean;
unmapped java.lang.String;
unmapped java.lang.Long;
unmapped com.fujitsu.vdmj.mapper.FileList;
