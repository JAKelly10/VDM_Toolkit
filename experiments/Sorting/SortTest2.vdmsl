module SortTest2
imports from Sort
	functions sort
	
exports all
definitions
types
	R ::
		ordered	: nat
		ignored	: nat;

values
	S1 = [mk_R(1,1), mk_R(2,2), mk_R(1,3), mk_R(2,4), mk_R(1,5), mk_R(2,6)]

functions
	lessR: R * R -> bool
	lessR(a, b) ==
		a.ordered < b.ordered;	-- Only depends on one field, to check for stable sorting

	test1: () -> seq of R
	test1() == Sort`sort[R](S1, lessR)

	pre forall i, j in set inds S1 &
		(i < j) => (S1(i).ignored < S1(j).ignored)

	post forall i, j in set inds RESULT &
		(RESULT(i).ordered = RESULT(j).ordered and i < j) => (RESULT(i).ignored < RESULT(j).ignored);

end SortTest2